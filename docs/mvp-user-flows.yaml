# User Flows - stambeno.ba MVP
# Complete user journey documentation

version: "1.0"

# ============================================================================
# GUEST FLOWS - RENTAL
# ============================================================================

guest_rental_flows:
  
  # FLOW 1: Search and book property for rental
  search_and_book_rental:
    step_1_search:
      action: "Guest visits homepage"
      input: "Location, dates, guests, property type"
      behavior: "System filters properties by availability and criteria"
      output: "List of available properties with prices"
    
    step_2_browse:
      action: "Guest browses search results"
      features:
        - "Filter by price, bedrooms, amenities"
        - "View on map"
        - "Save/favorite properties"
        - "Sort by price/rating/newest"
      output: "Refined list"
    
    step_3_view_property:
      action: "Guest clicks on property"
      displays:
        - "All photos in gallery"
        - "Full description"
        - "Amenities list"
        - "Location on map"
        - "Price breakdown"
        - "Availability calendar"
        - "Reviews from past guests"
        - "Owner profile (rating, response time)"
        - "Similar properties"
      actions:
        - "Save property"
        - "Share property"
        - "Contact owner"
        - "Book now"
    
    step_4_contact_owner_optional:
      action: "Guest sends message to owner"
      purpose: "Ask questions before booking"
      behavior: "Creates conversation thread"
      notification: "Owner notified immediately"
    
    step_5_initiate_booking:
      action: "Guest clicks 'Book' or 'Request to Book'"
      form:
        - "Confirm dates"
        - "Number of guests"
        - "Phone number"
        - "Special requests (optional)"
      validation:
        - "Check availability again"
        - "Calculate final price"
      output: "Booking summary with price breakdown"
    
    step_6_payment:
      action: "Guest enters payment details"
      provider: "Stripe"
      charges: "base_price + cleaning_fee + service_fee + deposit"
      behavior: "Create payment intent"
      security: "3D Secure authentication if required"
    
    step_7a_instant_book:
      condition: "If property has instant_book = true"
      action: "Payment processed immediately"
      result:
        - "Booking status = 'confirmed'"
        - "Block dates on calendar"
        - "Notify owner of confirmed booking"
        - "Send confirmation email to guest"
        - "Provide booking details and owner contact"
    
    step_7b_request_approval:
      condition: "If instant_book = false"
      action: "Hold payment"
      result:
        - "Booking status = 'pending'"
        - "Notify owner to review request"
        - "Owner has 24h to respond"
      
      owner_confirms:
        - "Booking status = 'confirmed'"
        - "Charge payment"
        - "Send confirmation to guest"
      
      owner_rejects:
        - "Booking status = 'cancelled'"
        - "Release payment hold"
        - "Full refund to guest"
        - "Notify guest with reason"
      
      no_response_24h:
        - "Booking auto-cancelled"
        - "Full refund to guest"
    
    step_8_pre_checkin:
      timing: "24 hours before check-in"
      notifications:
        - "Send reminder to guest and owner"
        - "Share check-in instructions"
        - "Share owner contact info"
        - "Share guest info to owner"
    
    step_9_checkin:
      action: "Owner marks guest as checked in"
      behavior: "Update booking.checked_in_at"
      payment: "Release payment to owner (hold deposit)"
    
    step_10_stay:
      support: "Guest and owner can message during stay"
      issues: "Can contact support if problems arise"
    
    step_11_checkout:
      action: "Owner marks guest as checked out"
      behavior:
        - "Update booking.checked_out_at"
        - "Booking status = 'completed'"
        - "Start 48h deposit release countdown"
      
      deposit_release:
        automatic: "Released after 48h if no issues"
        dispute: "Owner can file dispute for damages"
    
    step_12_review:
      timing: "After checkout"
      behavior:
        - "Prompt guest to review property"
        - "Prompt owner to review guest"
        - "14-day window to submit"
      mutual_reveal: "Reviews shown after both submit or window closes"

  # FLOW 2: Cancel booking
  cancel_booking:
    action: "Guest cancels booking from 'My Bookings'"
    input: "Cancellation reason"
    behavior:
      - "Apply cancellation policy"
      - "Calculate refund amount"
      - "Process refund"
      - "Unblock dates on calendar"
      - "Notify owner"
      - "Update booking status = 'cancelled'"
    output: "Refund confirmation with amount and timeline"

# ============================================================================
# GUEST FLOWS - PURCHASE
# ============================================================================

guest_purchase_flows:
  
  # FLOW 3: Make purchase offer
  search_and_offer:
    step_1_search:
      action: "Guest searches for properties"
      filter: "listing_type = 'sale' or 'both'"
      input: "Location, price range, property type, bedrooms, etc."
      output: "List of properties for sale"
    
    step_2_view_property:
      action: "Guest views property details"
      displays:
        - "Sale price"
        - "Property details (size, year, condition)"
        - "All photos"
        - "Location and neighborhood info"
        - "Energy certificate, documents"
        - "Owner profile"
      actions:
        - "Save property"
        - "Contact owner"
        - "Make offer"
    
    step_3_make_offer:
      action: "Guest clicks 'Make an Offer'"
      form:
        - "Offer amount"
        - "Financing type (cash/mortgage/mixed)"
        - "Message to owner"
        - "Contingencies (inspection, financing, etc.)"
        - "Proposed closing date"
        - "Offer valid until (date/time)"
      validation: "User must be verified for high-value offers"
      behavior:
        - "Create PurchaseOffer record"
        - "Offer status = 'pending'"
        - "Notify owner immediately"
    
    step_4_owner_response:
      owner_accepts:
        behavior:
          - "Offer status = 'accepted'"
          - "Property status = 'under_contract'"
          - "Reject all other pending offers"
          - "Notify buyer"
        next: "Proceed to contract phase"
      
      owner_rejects:
        behavior:
          - "Offer status = 'rejected'"
          - "Notify buyer with reason"
          - "Property remains active"
        next: "Buyer can make new offer or move on"
      
      owner_counters:
        behavior:
          - "Offer status = 'countered'"
          - "Owner provides counter_offer_amount and message"
          - "Notify buyer"
        buyer_options:
          - "Accept counter offer"
          - "Make new offer"
          - "Withdraw"
      
      no_response:
        condition: "Offer expires (offer_valid_until passed)"
        behavior: "Offer status = 'expired'"
    
    step_5_contract_phase:
      trigger: "Offer accepted"
      platform_role: "Facilitate communication"
      offline_process:
        - "Buyer and seller work with lawyers/notary"
        - "Sign purchase contract"
        - "Arrange financing (if mortgage)"
        - "Property inspection"
        - "Final walk-through"
      platform_tracking: "Update offer.contract_signed = true"
    
    step_6_closing:
      action: "Owner marks property as sold"
      behavior:
        - "Property status = 'sold'"
        - "Property.sold_at = timestamp"
        - "Calculate and charge platform fee (2% to owner)"
        - "Property removed from active listings"
      result: "Transaction complete"

# ============================================================================
# OWNER FLOWS - LISTING PROPERTY
# ============================================================================

owner_listing_flows:
  
  # FLOW 4: Create property listing
  create_property_listing:
    step_1_account_setup:
      condition: "First-time owner"
      action: "User enables owner mode"
      requirements:
        - "Complete profile"
        - "Verify identity"
        - "Setup payment account (Stripe Connect)"
      output: "is_owner = true, can list properties"
    
    step_2_create_listing:
      action: "Owner clicks 'List Property'"
      form_sections:
        
        property_basics:
          - "Property type (apartment/house/etc)"
          - "Listing type (rent/sale/both)"
          - "Title (max 200 chars)"
          - "Description (rich text)"
        
        location:
          - "Address (line 1, line 2)"
          - "City, municipality"
          - "Postal code"
          - "Set location on map (drag pin)"
        
        details:
          - "Number of bedrooms"
          - "Number of bathrooms"
          - "Size (sqm)"
          - "Floor number"
          - "Total floors in building"
          - "Year built"
        
        pricing_rental:
          condition: "If listing_type = 'rent' or 'both'"
          fields:
            - "Price per night"
            - "Price per month (optional)"
            - "Minimum rental nights"
            - "Maximum rental nights (optional)"
            - "Cleaning fee"
            - "Security deposit"
            - "Instant book (yes/no)"
        
        pricing_sale:
          condition: "If listing_type = 'sale' or 'both'"
          fields:
            - "Sale price"
            - "Price negotiable (yes/no)"
        
        amenities:
          - "Select from checklist (WiFi, parking, heating, etc)"
        
        photos:
          - "Upload 1-20 photos"
          - "Drag to reorder"
          - "First photo = cover"
        
        availability:
          condition: "If for rent"
          - "Available from (date)"
          - "Available until (date)"
          - "Block specific dates on calendar"
      
      validation:
        - "All required fields filled"
        - "At least 1 photo"
        - "Pricing set based on listing_type"
      
      behavior:
        - "Create Property record"
        - "Status = 'draft'"
        - "Generate slug from title"
      
      output: "Draft property created"
    
    step_3_preview:
      action: "Owner previews listing"
      display: "Show exactly as guests will see"
      actions: ["Edit", "Publish"]
    
    step_4_publish:
      action: "Owner clicks 'Publish'"
      validation:
        - "Profile is complete"
        - "Identity verified"
        - "Payment account setup"
      behavior:
        - "Status = 'active'"
        - "published_at = timestamp"
        - "Property appears in search"
        - "Generate availability calendar (for rentals)"
      output: "Property live"
    
    step_5_manage:
      ongoing_actions:
        - "Edit property details"
        - "Add/remove photos"
        - "Update pricing"
        - "Manage availability calendar"
        - "Pause listing (inactive)"
        - "Delete listing (if no bookings)"
        - "View analytics (views, saves, bookings)"

# ============================================================================
# OWNER FLOWS - MANAGING BOOKINGS
# ============================================================================

owner_booking_flows:
  
  # FLOW 5: Respond to booking request
  handle_booking_request:
    condition: "instant_book = false"
    
    step_1_notification:
      trigger: "New booking request"
      behavior:
        - "Push notification + email"
        - "Show in 'Bookings' dashboard"
      urgency: "Must respond within 24 hours"
    
    step_2_review_request:
      action: "Owner views booking details"
      displays:
        - "Guest name and profile"
        - "Guest rating (if previous bookings)"
        - "Check-in and check-out dates"
        - "Number of guests"
        - "Special requests"
        - "Price breakdown"
      options: ["Accept", "Decline", "Message Guest"]
    
    step_3_message_guest_optional:
      action: "Owner can message guest for clarification"
      behavior: "Real-time messaging"
    
    step_4a_accept:
      action: "Owner clicks 'Accept'"
      behavior:
        - "Booking status = 'confirmed'"
        - "Charge guest payment"
        - "Block dates on calendar"
        - "Notify guest"
        - "Send confirmation email with details"
    
    step_4b_decline:
      action: "Owner clicks 'Decline'"
      input: "Reason for declining"
      behavior:
        - "Booking status = 'cancelled'"
        - "Release payment hold"
        - "Refund guest in full"
        - "Notify guest"
      note: "Frequent declines hurt owner's rating"
  
  # FLOW 6: Manage instant booking
  handle_instant_booking:
    condition: "instant_book = true"
    
    step_1_notification:
      trigger: "New confirmed booking"
      behavior:
        - "Booking is already confirmed"
        - "Payment already processed"
        - "Dates already blocked"
        - "Notify owner of new booking"
    
    step_2_review:
      action: "Owner views booking details"
      displays: "Same as booking request"
      note: "Cannot decline, but can cancel with penalty"
    
    step_3_prepare:
      action: "Owner prepares for guest arrival"
      communication: "Can message guest for coordination"
  
  # FLOW 7: Check-in and check-out
  checkin_checkout_flow:
    checkin:
      timing: "On or after check-in date"
      action: "Owner marks guest as checked in"
      optional: "Owner can add notes"
      behavior:
        - "booking.checked_in_at = timestamp"
        - "Release payment to owner (minus fees)"
        - "Hold deposit separately"
    
    checkout:
      timing: "On or after check-out date"
      action: "Owner marks guest as checked out"
      inspection: "Owner inspects property"
      behavior:
        - "booking.checked_out_at = timestamp"
        - "booking.status = 'completed'"
        - "Start deposit release timer (48h)"
      
      if_damage:
        action: "Owner files damage claim"
        behavior: "Hold deposit pending resolution"
      
      if_no_issues:
        automatic: "Deposit auto-released after 48h"

# ============================================================================
# OWNER FLOWS - MANAGING OFFERS
# ============================================================================

owner_offer_flows:
  
  # FLOW 8: Respond to purchase offer
  handle_purchase_offer:
    step_1_notification:
      trigger: "New purchase offer received"
      behavior:
        - "Push notification + email"
        - "Show in 'Offers' dashboard"
      urgency: "Respond before offer expires"
    
    step_2_review_offer:
      action: "Owner views offer details"
      displays:
        - "Buyer name and profile"
        - "Offer amount vs asking price"
        - "Financing type"
        - "Contingencies"
        - "Proposed closing date"
        - "Buyer's message"
        - "Valid until timestamp"
      
      compare: "If multiple offers, view all side-by-side"
    
    step_3_message_buyer_optional:
      action: "Owner can message buyer"
      purpose: "Ask questions, negotiate terms"
    
    step_4_respond:
      option_a_accept:
        action: "Owner clicks 'Accept Offer'"
        optional: "Add response message"
        behavior:
          - "offer.status = 'accepted'"
          - "property.status = 'under_contract'"
          - "Reject all other pending offers automatically"
          - "Notify buyer of acceptance"
          - "Provide next steps"
        result: "Move to contract phase"
      
      option_b_reject:
        action: "Owner clicks 'Reject Offer'"
        required: "Rejection reason"
        behavior:
          - "offer.status = 'rejected'"
          - "Notify buyer"
          - "Property remains active"
      
      option_c_counter:
        action: "Owner clicks 'Make Counter Offer'"
        form:
          - "Counter offer amount"
          - "Counter message (terms, conditions)"
        behavior:
          - "offer.status = 'countered'"
          - "Save counter_offer_amount and message"
          - "Notify buyer"
        result: "Ball in buyer's court"
      
      option_d_ignore:
        behavior: "Offer expires when valid_until passes"
        auto_action: "offer.status = 'expired'"
    
    step_5_contract_phase:
      trigger: "Offer accepted"
      responsibilities:
        - "Work with buyer's lawyer"
        - "Provide property documents"
        - "Coordinate inspections"
        - "Sign contract"
      platform: "Use messaging to coordinate"
      tracking: "Update contract_signed status"
    
    step_6_closing:
      action: "Owner marks property as sold"
      behavior:
        - "property.status = 'sold'"
        - "Platform charges 2% commission"
        - "Property archived"
      result: "Sale complete"

# ============================================================================
# COMMON FLOWS
# ============================================================================

common_flows:
  
  # FLOW 9: Messaging
  messaging_flow:
    initiate:
      context: "From property page, booking, or offer"
      action: "User clicks 'Contact' or 'Send Message'"
      behavior:
        - "Create conversation if new"
        - "Open message composer"
    
    compose:
      input: "Message text"
      submit: "Click 'Send'"
      behavior:
        - "Create Message record"
        - "Link to context (property/booking/offer)"
        - "Notify recipient"
    
    receive:
      notification: "Push + email + in-app badge"
      action: "User clicks notification or visits Messages"
      display: "Conversation thread with context"
    
    reply:
      action: "User types and sends reply"
      threading: "All messages in conversation thread"
  
  # FLOW 10: Reviews
  review_flow:
    trigger: "Booking completed (after checkout)"
    
    prompt:
      timing: "Immediately after checkout"
      method: "Email + in-app notification"
      window: "14 days to submit review"
    
    guest_reviews_property:
      form:
        - "Overall rating (1-5 stars)"
        - "Cleanliness rating"
        - "Accuracy rating"
        - "Communication rating"
        - "Location rating"
        - "Value rating"
        - "Title (optional)"
        - "Written review"
      submit: "Post Review"
      behavior:
        - "Create Review record"
        - "review_type = 'property'"
        - "Link to booking and property"
        - "Update property's average rating"
    
    owner_reviews_guest:
      form:
        - "Overall rating (1-5 stars)"
        - "Written review"
      submit: "Post Review"
      behavior:
        - "Create Review record"
        - "review_type = 'guest'"
        - "Link to booking and guest"
        - "Update guest's average rating"
    
    mutual_reveal:
      rule: "Reviews hidden until both submit OR 14-day window closes"
      purpose: "Prevent bias"
      publication: "After reveal, both reviews become public"
    
    owner_response:
      trigger: "Owner sees review of their property"
      action: "Owner clicks 'Respond'"
      form: "Response text"
      behavior:
        - "Add response to review"
        - "Notify reviewer"
        - "Response shown publicly"
  
  # FLOW 11: Save/Favorite properties
  save_property_flow:
    action: "User clicks heart icon on property"
    behavior:
      - "Create SavedProperty record"
      - "Show filled heart"
      - "Add to 'Saved Properties' list"
    
    view_saved:
      action: "User visits 'Saved Properties'"
      display: "Grid of saved properties"
      actions: ["View", "Unsave", "Compare"]
  
  # FLOW 12: Notifications
  notification_flow:
    receive:
      channels: "Push, email, in-app"
      display: "Badge on bell icon with unread count"
    
    view:
      action: "User clicks notification center"
      display: "List of notifications (newest first)"
      states: "Read vs unread styling"
    
    interact:
      click: "Clicking notification navigates to relevant page"
      mark_read: "Auto-mark as read when viewed"
      action: "Can mark all as read"

# ============================================================================
# ERROR FLOWS
# ============================================================================

error_flows:
  
  property_no_longer_available:
    trigger: "Guest tries to book property that just became unavailable"
    behavior:
      - "Show error message"
      - "Suggest similar properties"
      - "Allow save property for future"
  
  payment_failed:
    trigger: "Payment processing error"
    behavior:
      - "Show clear error message"
      - "Keep booking in 'pending' for 1 hour"
      - "Allow retry payment"
      - "If not resolved in 1h, cancel booking"
  
  offer_expired:
    trigger: "Owner tries to accept expired offer"
    behavior:
      - "Show 'This offer has expired'"
      - "Suggest contacting buyer to submit new offer"
  
  verification_required:
    trigger: "User tries action requiring verification"
    behavior:
      - "Show verification prompt"
      - "Redirect to verification flow"
      - "Return to original action after verified"

# ============================================================================
# ADMIN FLOWS (Future)
# ============================================================================

admin_flows:
  note: "Admin functionality - implement post-MVP"
  
  user_moderation:
    - "Review reported users"
    - "Suspend/ban accounts"
    - "Verify identities manually"
  
  property_moderation:
    - "Review reported listings"
    - "Remove fraudulent properties"
    - "Feature properties"
  
  dispute_resolution:
    - "Review damage claims"
    - "Mediate guest-owner disputes"
    - "Resolve refund issues"
  
  analytics_dashboard:
    - "Platform-wide metrics"
    - "Revenue reports"
    - "User growth"
    - "Transaction volumes"
